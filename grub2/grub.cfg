# GLEE USB GRUB2 Configuration

loadfont ascii
insmod png
#set gfxmode=640x480
#insmod gfxterm
insmod vbe
terminal_output gfxterm

#set color_normal=white/black
#set color_highlight=light-red/black
#set menu_color_normal=light-red/black
#set menu_color_highlight=white/black

#insmod gfxmenu
#menuviewer="gfxmenu"
set theme=$prefix/themes/invader/theme.txt

# System RescueCD
#menuentry "SYSRESCUECD" {
#    loopback loop /sysrecuecd-x86-2.3.1.iso
#    linux  (loop)/isolinux/rescue64 nomodeset vga=791 docache setkmap=fr isoloop=/sysrecuecd-x86-2.3.1.iso
#    initrd (loop)/isolinux/initram.igz
#}
submenu "System RescueCD >" --class gentoo {
    set theme=$prefix/themes/invader/theme.txt
    set isofile="/iso/systemrescuecd-x86-3.1.0.iso"

if cpuid -l; then
menuentry "System RescueCD std-64bit (cached to RAM)" --class gentoo {
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/isolinux/rescue64 isoloop=$isofile docache
    initrd (loop)/isolinux/initram.igz
}
menuentry "System RescueCD std-64bit" --class gentoo {
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/isolinux/rescue64 isoloop=$isofile
    initrd (loop)/isolinux/initram.igz
}
menuentry "System RescueCD alt-64bit (cached to RAM)" --class gentoo {
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/isolinux/altker64 isoloop=$isofile docache
    initrd (loop)/isolinux/initram.igz
}
menuentry "System RescueCD alt-64bit" --class gentoo {
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/isolinux/altker64 isoloop=$isofile
    initrd (loop)/isolinux/initram.igz
}
fi
menuentry "System RescueCD std-32bit (cached to RAM)" --class gentoo {
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/isolinux/rescuecd isoloop=$isofile docache
    initrd (loop)/isolinux/initram.igz
}
menuentry "System RescueCD std-32bit" --class gentoo {
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/isolinux/rescuecd isoloop=$isofile
    initrd (loop)/isolinux/initram.igz
}
menuentry "System RescueCD alt-32bit (cached to RAM)" --class gentoo {
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/isolinux/altker32 isoloop=$isofile docache
    initrd (loop)/isolinux/initram.igz
}
menuentry "System RescueCD alt-32bit" --class gentoo {
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/isolinux/altker32 isoloop=$isofile
    initrd (loop)/isolinux/initram.igz
}

}

# Fedora - Does not work without changes
submenu "Fedora >" --class fedora {
    set theme=$prefix/themes/invader/theme.txt

if cpuid -l; then
menuentry "Fedora 17 Live Desktop x86_64" --class fedora {
    set isofile="/iso/Fedora-17-x86_64-Live-Desktop.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/isolinux/vmlinuz0 root=live:$isofile rootfstype=auto ro liveimg quiet rhgb rd.luks=0 rd.md=0
    initrd /boot/files/Fedora-17-x86_64-initrd.img
}
fi
menuentry "Fedora 17 Live Desktop i686" --class fedora {
    set isofile="/iso/Fedora-17-i686-Live-Desktop.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/isolinux/vmlinuz0 root=live:$isofile rootfstype=auto ro liveimg quiet rhgb rd.luks=0 rd.md=0
    initrd /boot/files/Fedora-17-i686-initrd.img
}

}

# Red Hat Enterprise Linux
if cpuid -l; then
submenu "Red Hat Enterprise Linux >" --class redhat {
    set theme=$prefix/themes/invader/theme.txt

set rhelv="6.3"
set rheliso="/iso/rhel-server-$rhelv-x86_64-boot.iso"
# lang=en_US keymap=fr
# ip=192.168.1.10 netmask=255.255.255.0 gateway=192.168.1.1 dns=192.168.1.3
# vnc vncpassword=tototo
# sshd=1
# ksdevice=eth0
# repo=http://foo/bar/os
# ks=http://server.mydomain.com/directory/ks.cfg kssendmac
#set rhelopts="lang=en_US keymap=es sshd=1"
menuentry "RHEL $rhelv x86_64" --class redhat {
    loopback loop $rheliso
    linux (loop)/isolinux/vmlinuz lang=en_US repo=hd:sda1:/boot/files/rhel6.3
    initrd (loop)/isolinux/initrd.img
}
menuentry "RHEL $rhelv x86_64 (rescue)" --class redhat {
    loopback loop $rheliso
    linux (loop)/isolinux/vmlinuz rescue lang=en_US repo=hd:sda1:/boot/files/rhel6.3
    initrd (loop)/isolinux/initrd.img
}
menuentry "RHEL $rhelv x86_64 (kickstart)" --class redhat {
    loopback loop $rheliso
    linux (loop)/isolinux/vmlinuz kssendmac ks=hd:sda1:/boot/files/ks/default.ks
    initrd (loop)/isolinux/initrd.img
}

}
fi

# Debian (Wheezy, since 5.x doesn't support loopback)
submenu "Debian >" --class debian {
    set theme=$prefix/themes/invader/theme.txt

if cpuid -l; then
menuentry "Debian Live Wheezy a2 amd64 GNOME Desktop" --class debian {
    set isofile="/iso/debian-wheezy-live-a2-amd64-gnome-desktop.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/live/vmlinuz boot=live findiso=$isofile config quiet splash
    initrd (loop)/live/initrd.img
}
menuentry "Debian Live Wheezy a2 amd64 KDE Desktop" --class debian {
    set isofile="/iso/debian-wheezy-live-a2-amd64-kde-desktop.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/live/vmlinuz boot=live findiso=$isofile config quiet splash
    initrd (loop)/live/initrd.img
}
menuentry "Debian Live Wheezy a2 amd64 LXDE Desktop" --class debian {
    set isofile="/iso/debian-wheezy-live-a2-amd64-lxde-desktop.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/live/vmlinuz boot=live findiso=$isofile config quiet splash
    initrd (loop)/live/initrd.img
}
menuentry "Debian Live Wheezy a2 amd64 XFCE Desktop" --class debian {
    set isofile="/iso/debian-wheezy-live-a2-amd64-xfce-desktop.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/live/vmlinuz boot=live findiso=$isofile config quiet splash
    initrd (loop)/live/initrd.img
}
menuentry "Debian Live Wheezy a2 amd64 Standard" --class debian {
    set isofile="/iso/debian-wheezy-live-a2-amd64-standard.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/live/vmlinuz boot=live findiso=$isofile config quiet splash
    initrd (loop)/live/initrd.img
}
menuentry "Debian Live Wheezy a2 amd64 Rescue" --class debian {
    set isofile="/iso/debian-wheezy-live-a2-amd64-rescue.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/live/vmlinuz boot=live findiso=$isofile config quiet splash
    initrd (loop)/live/initrd.img
}
fi
menuentry "Debian Live Wheezy a2 i686-PAE GNOME Desktop" --class debian {
    set isofile="/iso/debian-wheezy-live-a2-i386-gnome-desktop.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/live/vmlinuz2 boot=live findiso=$isofile config quiet splash
    initrd (loop)/live/initrd2.img
}
menuentry "Debian Live Wheezy a2 i686-PAE KDE Desktop" --class debian {
    set isofile="/iso/debian-wheezy-live-a2-i386-kde-desktop.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/live/vmlinuz2 boot=live findiso=$isofile config quiet splash
    initrd (loop)/live/initrd2.img
}
menuentry "Debian Live Wheezy a2 i686-PAE LXDE Desktop" --class debian {
    set isofile="/iso/debian-wheezy-live-a2-i386-lxde-desktop.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/live/vmlinuz2 boot=live findiso=$isofile config quiet splash
    initrd (loop)/live/initrd2.img
}
menuentry "Debian Live Wheezy a2 i686-PAE XFCE Desktop" --class debian {
    set isofile="/iso/debian-wheezy-live-a2-i386-xfce-desktop.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/live/vmlinuz2 boot=live findiso=$isofile config quiet splash
    initrd (loop)/live/initrd2.img
}
menuentry "Debian Live Wheezy a2 i686-PAE Standard" --class debian {
    set isofile="/iso/debian-wheezy-live-a2-i386-standard.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/live/vmlinuz2 boot=live findiso=$isofile config quiet splash
    initrd (loop)/live/initrd2.img
}
menuentry "Debian Live Wheezy a2 i686-PAE Rescue" --class debian {
    set isofile="/iso/debian-wheezy-live-a2-i386-rescue.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/live/vmlinuz2 boot=live findiso=$isofile config quiet splash
    initrd (loop)/live/initrd2.img
}
menuentry "Debian Live Wheezy a2 i486 GNOME Desktop" --class debian {
    set isofile="/iso/debian-wheezy-live-a2-i386-gnome-desktop.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/live/vmlinuz1 boot=live findiso=$isofile config quiet splash
    initrd (loop)/live/initrd1.img
}
menuentry "Debian Live Wheezy a2 i486 KDE Desktop" --class debian {
    set isofile="/iso/debian-wheezy-live-a2-i386-kde-desktop.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/live/vmlinuz1 boot=live findiso=$isofile config quiet splash
    initrd (loop)/live/initrd1.img
}
menuentry "Debian Live Wheezy a2 i486 LXDE Desktop" --class debian {
    set isofile="/iso/debian-wheezy-live-a2-i386-lxde-desktop.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/live/vmlinuz1 boot=live findiso=$isofile config quiet splash
    initrd (loop)/live/initrd1.img
}
menuentry "Debian Live Wheezy a2 i486 XFCE Desktop" --class debian {
    set isofile="/iso/debian-wheezy-live-a2-i386-xfce-desktop.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/live/vmlinuz1 boot=live findiso=$isofile config quiet splash
    initrd (loop)/live/initrd1.img
}
menuentry "Debian Live Wheezy a2 i486 Standard" --class debian {
    set isofile="/iso/debian-wheezy-live-a2-i386-standard.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/live/vmlinuz1 boot=live findiso=$isofile config quiet splash
    initrd (loop)/live/initrd1.img
}
menuentry "Debian Live Wheezy a2 i486 Rescue" --class debian {
    set isofile="/iso/debian-wheezy-live-a2-i386-rescue.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/live/vmlinuz1 boot=live findiso=$isofile config quiet splash
    initrd (loop)/live/initrd1.img
}

}

# Mint
submenu "Linux Mint >" --class mint {
    set theme=$prefix/themes/invader/theme.txt

if cpuid -l; then
menuentry "Linux Mint 13 Cinnamon (64bit)" --class mint {
    set isofile="/iso/linuxmint-13-cinnamon-dvd-64bit.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=$isofile quiet splash
    initrd (loop)/casper/initrd.lz
}
menuentry "Linux Mint 13 Mate (64bit)" --class mint {
    set isofile="/iso/linuxmint-13-mate-dvd-64bit.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=$isofile quiet splash
    initrd (loop)/casper/initrd.lz
}
fi
menuentry "Linux Mint 13 Cinnamon (32bit)" --class mint {
    set isofile="/iso/linuxmint-13-cinnamon-dvd-32bit.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=$isofile quiet splash
    initrd (loop)/casper/initrd.lz
}
menuentry "Linux Mint 13 Mate (32bit)" --class mint {
    set isofile="/iso/linuxmint-13-mate-dvd-32bit.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=$isofile quiet splash
    initrd (loop)/casper/initrd.lz
}

}

# Ubuntu
submenu "Ubuntu >" --class ubuntu {
    set theme=$prefix/themes/invader/theme.txt

if cpuid -l; then
menuentry "Ubuntu 12.10 Live Desktop amd64" --class ubuntu {
    set isofile="/iso/ubuntu-12.10-desktop-amd64.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=$isofile noprompt noeject quiet splash
    initrd (loop)/casper/initrd.lz
}
menuentry "Ubuntu 12.04.1 (LTS) Live Desktop amd64" --class ubuntu {
    set isofile="/iso/ubuntu-12.04.1-desktop-amd64.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=$isofile noprompt noeject quiet splash
    initrd (loop)/casper/initrd.lz
}
menuentry "Ubuntu 12.04.1 (LTS) Server amd64" --class ubuntu {
    set isofile="/iso/ubuntu-12.04.1-server-amd64.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=$isofile noprompt noeject quiet splash
    initrd (loop)/casper/initrd.lz
}
fi
menuentry "Ubuntu 12.10 Live Desktop i386" --class ubuntu {
    set isofile="/iso/ubuntu-12.10-desktop-i386.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=$isofile noprompt noeject quiet splash
    initrd (loop)/casper/initrd.lz
}
menuentry "Ubuntu 12.04.1 (LTS) Live Desktop i386" --class ubuntu {
    set isofile="/iso/ubuntu-12.04.1-desktop-i386.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=$isofile noprompt noeject quiet splash
    initrd (loop)/casper/initrd.lz
}
menuentry "Ubuntu 12.04.1 (LTS) Server i386" --class ubuntu {
    set isofile="/iso/ubuntu-12.04.1-server-i386.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=$isofile noprompt noeject quiet splash
    initrd (loop)/casper/initrd.lz
}

}

# Knoppix
submenu "Knoppix >" --class knoppix {
    set theme=$prefix/themes/invader/theme.txt

menuentry "Knoppix 7.0.4 CD" --class knoppix {
    set isofile="/iso/KNOPPIX_V7.0.4CD-2012-08-20-EN.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/boot/isolinux/linux bootfrom=/dev/sda1$isofile ramdisk_size=100000 lang=en apm=power-off nomce libata.force=noncq hpsa.hpsa_allow_any=1 loglevel=1 tz=localtime
    initrd (loop)/boot/isolinux/minirt.gz
}

}

# Arch
# earlymodules=loop
submenu "Arch Linux >" --class arch {
    set theme=$prefix/themes/invader/theme.txt

if cpuid -l; then
menuentry "Arch Linux Install 2012.11.01 x86_64" --class arch {
    set isofile="/iso/archlinux-2012.11.01-dual.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/arch/boot/x86_64/vmlinuz img_dev=/dev/sda1 img_loop=$isofile archisobasedir=arch archisolabel=ARCH_201211
    initrd (loop)/arch/boot/x86_64/archiso.img
}
menuentry "ArchBang Live 2012.11.01 x86_64" --class arch {
    set isofile="/iso/archbang-2012.11.01-x86_64.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/arch/boot/x86_64/vmlinuz img_dev=/dev/sda1 img_loop=$isofile archisobasedir=arch archisolabel=ARCHBANG quiet
    initrd (loop)/arch/boot/x86_64/archiso.img
}
fi
menuentry "Arch Linux Install 2012.11.01 i686" --class arch {
    set isofile="/iso/archlinux-2012.11.01-dual.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/arch/boot/i686/vmlinuz img_dev=/dev/sda1 img_loop=$isofile archisobasedir=arch archisolabel=ARCH_201211
    initrd (loop)/arch/boot/i686/archiso.img
}
menuentry "ArchBang Live 2012.11.01 i686" --class arch {
    set isofile="/iso/archbang-2012.11.01-i686.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/arch/boot/i686/vmlinuz img_dev=/dev/sda1 img_loop=$isofile archisobasedir=arch archisolabel=ARCHBANG quiet
    initrd (loop)/arch/boot/i686/archiso.img
}

}

# Other Utilities
submenu "Utilities >" --class gear {
    set theme=$prefix/themes/invader/theme.txt

# GParted
menuentry "GParted Live" --class gparted {
    set isofile="/iso/gparted-live-0.14.0-1.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux (loop)/live/vmlinuz boot=live config union=aufs noswap noprompt ip=frommedia toram=filesystem.squashfs findiso=$isofile
    initrd (loop)/live/initrd.img
}

# iPXE
menuentry "iPXE" --class net {
    set isofile="/iso/ipxe.iso"
    echo "Booting ${isofile}..."
    loopback loop $isofile
    linux16 (loop)/ipxe.krn
}

# Utilities from System RescueCD
menuentry "Hardware Diagnostics Tool" --class gear {
    set isofile="/iso/systemrescuecd-x86-3.1.0.iso"
    loopback loop $isofile
    linux16 (loop)/isolinux/memdisk floppy
    initrd16 (loop)/bootdisk/hdt.img
}
menuentry "Memtest86+" --class gear {
    set isofile="/iso/systemrescuecd-x86-3.1.0.iso"
    loopback loop $isofile
    linux16 (loop)/bootdisk/memtestp
}
# Doesn't work
#menuentry "Netboot" --class net {
#    linux16 /isolinux/netboot
#}
# 201210 : Reboots :-(
#menuentry "FreeDOS" --class dos {
#    linux /isolinux/memdisk floppy
#    initrd /bootdisk/freedos.img
#    #linux16 /isolinux/memdisk floppy
#    #initrd16 /bootdisk/freedos.img
#}
menuentry "Offline Windows Password & Registry Editor" --class windows {
    set isofile="/iso/systemrescuecd-x86-3.1.0.iso"
    loopback loop $isofile
    linux (loop)/ntpasswd/vmlinuz rw vga=1 /boot/files/sysrescd/ntpasswd/scsi.cgz
    initrd (loop)/ntpasswd/initrd.cgz
}
menuentry "SGD: Super Grub2 Disk" --class gear {
    set isofile="/iso/systemrescuecd-x86-3.1.0.iso"
    loopback loop $isofile
    linux16 (loop)/isolinux/memdisk floppy raw
    initrd16 (loop)/bootdisk/grubdisk.img
}
# AIDA doesn't work
# GAG doesn't work
menuentry "Darik's Boot and Nuke" --class gear {
    set isofile="/iso/systemrescuecd-x86-3.1.0.iso"
    loopback loop $isofile
    #linux (loop)/bootdisk/dban.bzi nuke="dwipe" silent
    linux (loop)/bootdisk/dban.bzi
}
menuentry "MHDD: Low-level Hard Drive diagnostic tool" --class gear {
    set isofile="/iso/systemrescuecd-x86-3.1.0.iso"
    loopback loop $isofile
    linux16 (loop)/isolinux/memdisk floppy
    initrd16 (loop)/bootdisk/mhdd.img
}

}

# Empty line
menuentry ' ' {
    true
}
menuentry "Shutdown" --class shutdown {
    halt
}
menuentry "Reboot" --class shutdown {
    reboot
}

